datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Job {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  companyName  String?
  title        String
  type         String
  location     String
  experience   String?
  description  String
  skills       String?
  recruiterId  String
  applications Application[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Application {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  recruiterUserID    String
  fullName           String
  email              String
  candidateUserID    String
  status             String
  jobID              String   @db.ObjectId
  jobApplicationDate DateTime @default(now())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  job Job @relation(fields: [jobID], references: [id])
}

model Profile {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  userId              String
  fullName            String
  role                Role
  email               String
  isPremiumUser       Boolean
  memberShipType      String?
  isAdmin             Boolean
  memberShipStartDate DateTime?
  memberShipEndDate   DateTime?

  stripeCustomerId     String? // Add this field
  stripeSubscriptionId String? // Add this field

  // Recruiter specific fields
  // Candidate specific fields
  resume               String?
  companyName          String?
  currentJobLocation   String?
  preferredJobLocation String?
  currentSalary        String?
  noticePeriod         String?
  skills               String?
  totalExperience      String?
  collegeLocation      String?
  graduatedYear        String?
  linkedinProfile      String?
  isCandidatePremium   Boolean?
  candidateJobs        candidateJobs[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model candidateJobs {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  fullName       String
  email          String
  phoneNumber    String
  jobDescription String

  Profile   Profile? @relation(fields: [profileId], references: [id])
  profileId String?  @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feed {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  fullName String
  message  String
  image    String?
  likes    Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  reactorUserId   String
  reactorUserName String
  Feed            Feed?   @relation(fields: [feedId], references: [id])
  feedId          String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  RECRUITER
  CANDIDATE
}
